'''
Oct. 7 Documentation

Card class
  instance vars - sc_key, elixir, type, combat, damage, mechanics, counters, synergies, x location, y location, is_player
  use dictionary from json
  pair down to requried cards. (add goblin cage)
  --also has path_list instance var, that stores every past location (x, y) of the obj

Board class
  methods -
    place_card(self, board, card, x, y) -- void
      places specified card on specified coordinates
      sets cards x and y vars to its location
      if there is alr a card there / a castle, then can't place character there. -- returns smth??
    
    (**add more details**)move(self, board) -- void -- moves all cards 
      if card is_player, moves card to (row - 1) (moving "up")
      if card is computer's, moves card to (row + 1) (moving "down")
    
      **moves them by their specified speed
      if someone's in front of it, doesn't move
      ---ADD MORE

Deck
  size 8 list called deck
  filled with your 8 cards (Card objects, info from json)

  methods
    print_deck(self, deck)
      prints first 4 Cards (the 4 in your hand)
    play_card(self, index)
      removes the card at that index and adds it to end of list

Runner
  1) Create user_deck Object and computer_deck Object
  2) initialize board object, board
  3) while true -
    A) u_deck.print_deck, asks user to play card
    B) asks input for which card to play (inputs index)
    C) u_deck.play_card
    D) asks input for what coordinates
    E) board.place_card(board, u_deck[7], x, y)
  
    F) computer plays card (plays same card on equivalent coordinate -- temporary code)
  
    G) board.move (all cards move)
  
    H) the game stops when all character cards can't move forward (reach end of board, reach tower, reach other card, etc)

Note
(**will change**)-- all of our cards are character/troop cards (no spells yet)
-- cards only move forward (not making them move diagonal to path yet)
-- cards move after both players place a card

'''

